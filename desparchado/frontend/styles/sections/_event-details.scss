@use '@styles/variables' as *;
@use '@styles/functions' as *;
@use '@styles/animations' as *;
@use '@styles/mixins' as *;
@use '@styles/breakpoints' as *;
@use '@styles/typography' as *;
@use "sass:map";

$mobile-actions-overlap: -3.75rem;

.event-details {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: flex-end;
  color: $color-layout-foreground;
  margin-top: -3.1875rem;

  @media (min-width: map.get($breakpoints, m)) {
    flex-direction: row;
    padding-left: 1rem;
    gap: 1rem;
    margin-top: 0;
    margin-bottom: 0;
  }

  @media (min-width: map.get($breakpoints, ml)) {
    gap: 4rem;
    padding-left: 4rem;
  }

  &__image {
    flex-grow: 1;
    width: 100%;
    max-height: 30rem;
    position: relative;
    display: flex;
    overflow: hidden;

    &::after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 50%;
      background: linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.5) 100%);
    }

    img {
      width: 100%;
      object-fit: contain;

      @media (min-width: map.get($breakpoints, m)) {
        object-position: right;
      }
    }

    @media (min-width: map.get($breakpoints, m)) {
      position: sticky;
      top: calc(var(--header-height) + 1rem);
      max-width: 18rem;
      padding-bottom: 1rem;

      &::after {
        content: none;
      }
    }

    @media (min-width: map.get($breakpoints, ml)) {
      max-height: calc(100vh - var(--header-height) - 2rem);
    }

    @media (min-width: map.get($breakpoints, l)) {
      max-width: 32rem;
    }

    @media (min-width: map.get($breakpoints, xl)) {
      max-width: 40rem;
    }
  }

  &__image-source {
    position: absolute;
    font-size: 0.75rem;
    bottom: 2ch;
    left: 1ch;
    background: $color-layout-background;
    padding: 0.5rem;
    opacity: 0.5;
    width: fit-content;
    display: flex;
    flex-direction: column;

    @media (min-width: map.get($breakpoints, m)) {
      bottom: 3ch;
    }

    a {
      color: inherit;
    }
  }

  &__container {
    display: flex;
    flex-direction: row;
    gap: 5rem;
    align-items: flex-start;
    height: -webkit-fill-available;
  }

  &__details {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 0;
    align-self: flex-end;
    padding: 0;
    height: -webkit-fill-available;
    justify-content: flex-end;

    @media (min-width: map.get($breakpoints, m)) {
      padding: 5rem 0 0 5vw;
      gap: 2rem;
      margin-left: -5vw;
      border-left: $hairline_regular;
      max-width: 46.25rem;
    }

    @media (min-width: map.get($breakpoints, ml)) {
      padding-left: 17vw;
      margin-left: -17vw;
      gap: 3rem;
    }
  }

  &__address-section {
    gap: 0.3em;
    flex-wrap: wrap;

    * {
      margin: 0;
    }
  }

  &__info {
    display: flex;
    flex-wrap: wrap;
    flex-direction: column;
    gap: 0.5rem;
  }

  &__info-item {
    display: inline;

    * {
      margin: 0;
      display: inline;
    }
  }

  &__header {
    padding: 2rem 1rem;
    background: $color-dp-orange-10;
    border-top: $hairline_regular;
    border-bottom: $hairline_regular;
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    width: 100%;
    box-sizing: border-box;

    @media (min-width: map.get($breakpoints, m)) {
      background: transparent;
      padding: 0;
      border: none;
    }
  }
  
  &__mobile-actions {
    margin-bottom: $mobile-actions-overlap;
  }

  &__title-section {
    display: flex;
    flex-direction: row;
    gap: 1.5rem;
    margin-left: 0.5rem;

    @media (min-width: map.get($breakpoints, m)) {
      display: initial;
      margin-left: 0;
    }
  }

  &__title {
    flex: 1;
  }

  &__date {
    display: flex;
    flex-direction: column;
    flex-shrink: 0;

    .text-body-highlight {
      @media (max-width: map.get($breakpoints, m)) {
        font-size: 1.25rem;
      }
    }
  }

  &__content {
    align-items: flex-start;
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    padding: 4rem 1rem 5rem;

    @media (min-width: map.get($breakpoints, m)) {
      padding: 0 0 5rem;
    }
  }

  &__actions {
    border-left: $hairline_regular;
    flex-shrink: 0;
    max-width: 10rem;
    height: calc(100vh - var(--header-height));
    position: sticky;
    top: var(--header-height);
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    mix-blend-mode: multiply;
    padding: 0.75rem;
    box-sizing: border-box;
    overflow: auto;
  }

  &__actions-image {
    img {
      width: 100%;
      height: 100%;
    }
  }

  &__action {
    .button {
      flex-direction: column-reverse;
      align-items: center;
      color: var(--button-foreground);

      &::before {
        @extend .text-body-lg;

        position: initial;
        transform: none;
        text-align: center;
      }

      .icon--regular {
        width: 2.5rem;
        height: 2.5rem;
      }
    }
  }

  &__description {
    a {
      padding: 0.375rem 0.625rem;
      background-color: $color-gray-00;
      border: 0.0625rem solid $color-gray-100;
      border-radius: 0.25rem;
      transition: border-color 150ms $ease-out-quart, background-color 150ms $ease-out-quart;
      color: inherit;

      &::after {
        content: 'ðŸ”—';
        margin-left: 0.25rem;
        text-decoration: none;
      }

      &:hover {
        background-color: $color-dp-orange-10;
        border-color: $color-dp-orange-200;
      }
    }

    p {
      margin: 0;
    }
  }

  &__disclaimer {
    background-color: $color-dp-orange-100;
    padding: 1rem 1rem 0.5rem;
    border-radius: 0.5rem;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    max-width: 25rem;

    @media (min-width: map.get($breakpoints, ml)) {
      padding: 2rem 2rem 1rem;
    }
  }

  &__disclaimer-text {
    line-height: 1.3;
  }

  &__disclaimer-icon {
    width: 1.5rem;
    height: 1.5rem;

    .icon--large {
      width: 100%;
      height: 100%;
    }
  }

  &__additional {
    color: $color-layout-foreground;
    display: flex;
    align-items: flex-end;
    justify-content: flex-end;
    flex-direction: column;

    @media (min-width: map.get($breakpoints, ml)) {
      margin-right: 9.9rem;
    }

    &--stroke { 
      @media (min-width: map.get($breakpoints, m)) {
        border-right: $hairline_regular;
      }
    }
  }

  &__additional-children {
    width: 100%;
    border-top: $hairline_regular;

    @media (min-width: map.get($breakpoints, ml)) {
      padding-right: 5.15rem;
      max-width: calc(46.25rem + 17vw);
    }
  }

  &__item-list {
    padding: 2rem 0 0;
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }

  &__item-list-list {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: 1rem;
  }

  &__item-list-item {
    display: flex;
    flex-direction: row;
    gap: 1.5rem;
    align-items: flex-end;
    mix-blend-mode: multiply;
  }

  &__item-list-item-image {
    width: 4.375rem;
    object-fit: contain;
    object-position: bottom;
    height: auto;

    @media (min-width: map.get($breakpoints, m)) {
      width: 8.125rem;
    }
  }

  &__item-list-item-details {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    justify-content: flex-end;
    max-width: 15rem;
    width: 100%;

    .text-caption {
      display: -webkit-box;
      -webkit-box-orient: vertical;
      -webkit-line-clamp: 5;
      line-clamp: 5;
      overflow: hidden;
      line-height: 1.3;

      * {
        margin: 0;
      }
    }
  }

  &__map {
    display: flex;
    flex-direction: column;
    gap: 2rem;

    @media (min-width: map.get($breakpoints, m)) {
      flex-direction: row;
      align-items: flex-end;
    }
  }

  &__map-widget {
    width: 100%;
    border-left: $hairline_regular;
    border-right: $hairline_regular;
    border-bottom: $hairline_regular;

    @media (min-width: map.get($breakpoints, m)) {
      border-bottom: none;
    }
  }

  &__map-details {
    display: flex;
    flex-direction: column;
    padding: 1rem;
    margin-bottom: 1rem;
    gap: 1rem;
    min-width: 25rem;

    @media (min-width: map.get($breakpoints, m)) {
      padding-left: 0;
    }
  }

  &__map-address * {
    margin: 0;
  }

  &__special-item {
    border-left: $hairline_regular;

    @media (min-width: map.get($breakpoints, ml)) {
      margin-right: -5.15rem;
    }
  }

  &__special-banner {
    width: 100%;
  }

  &__special-banner-anchor {
    display: flex;
  }

  &__featured-events {
    border-top: $hairline_regular;
  }
}

.speakers {
  display: flex;
  gap: 1rem;
  align-items: center;

  &__avatar {
    width: 2rem;
    height: 2rem;
    border-radius: 50%;
    object-fit: cover;
    object-position: center;
  }

  &__avatar-container {
    display: flex;
    gap: 0.5rem;
  }
}

p {
  margin: 0;
}